// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UsersManager.Data;

#nullable disable

namespace UsersManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240501171730_InitialCreating")]
    partial class InitialCreating
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("UsersManager.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean")
                        .HasColumnName("ativo");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_create");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<int>("IdUserUpdate")
                        .HasColumnType("integer")
                        .HasColumnName("id_user_update");

                    b.Property<int>("NivelAcesso")
                        .HasColumnType("integer")
                        .HasColumnName("nivel_acesso");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("nome");

                    b.Property<byte[]>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("senha_hash");

                    b.Property<byte[]>("SenhaSalt")
                        .IsRequired()
                        .HasColumnType("bytea")
                        .HasColumnName("senha_salt");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sobrenome");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("data_update");

                    b.HasKey("Id");

                    b.ToTable("user");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ativo = true,
                            CreateAt = new DateTime(2024, 5, 1, 17, 17, 30, 577, DateTimeKind.Utc).AddTicks(4270),
                            Email = "admin@admin.com",
                            IdUserUpdate = 1,
                            NivelAcesso = 1,
                            Nome = "admin",
                            SenhaHash = new byte[] { 95, 116, 214, 215, 114, 121, 76, 169, 235, 162, 221, 181, 163, 145, 253, 0, 35, 61, 252, 249, 210, 118, 227, 125, 123, 128, 49, 27, 59, 196, 6, 51, 6, 243, 173, 145, 220, 107, 210, 76, 255, 195, 50, 106, 217, 120, 8, 172, 176, 126, 63, 153, 105, 51, 75, 51, 119, 97, 34, 75, 181, 129, 104, 128 },
                            SenhaSalt = new byte[] { 114, 105, 202, 182, 145, 44, 164, 110, 219, 89, 93, 25, 18, 34, 135, 85, 90, 3, 165, 144, 30, 51, 179, 70, 13, 169, 156, 73, 78, 228, 101, 85, 244, 25, 115, 118, 150, 81, 174, 196, 227, 162, 128, 70, 124, 9, 122, 125, 57, 189, 7, 199, 18, 161, 9, 135, 79, 17, 17, 145, 199, 19, 147, 226, 89, 56, 122, 10, 229, 37, 31, 72, 191, 223, 123, 130, 105, 122, 128, 162, 125, 234, 45, 179, 16, 89, 238, 225, 35, 32, 81, 216, 223, 191, 203, 177, 84, 12, 195, 123, 180, 163, 140, 1, 118, 197, 186, 27, 115, 209, 157, 175, 128, 251, 56, 9, 235, 108, 126, 31, 136, 119, 159, 130, 111, 127, 84, 0 },
                            Sobrenome = "admin",
                            UpdateAt = new DateTime(2024, 5, 1, 17, 17, 30, 577, DateTimeKind.Utc).AddTicks(4270)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
